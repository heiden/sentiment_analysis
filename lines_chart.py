# -*- coding: utf-8 -*-

import matplotlib.pyplot as plt
 
def colour(rgba):
  return (rgba[0] / 255.0, rgba[1] / 255.0, rgba[2] / 255.0, rgba[3])

def harmonic_mean(precision, recall):
  return 2 * ((precision * recall) / (precision + recall))

x = [x for x in range(1, 10+1)]
 
fig = plt.figure()
ax = fig.add_subplot(111)

p = [0.55, 0.58, 0.22, 0.68, 0.56, 0.82, 0.61, 0.64, 0.54, 0.88, 0.19]
r = [0.39, 0.55, 0.12, 0.86, 0.91, 0.94, 0.95, 0.82, 0.43, 0.98, 0.21]
mh = [0.45, 0.56, 0.15, 0.75, 0.69, 0.8, 0.74, 0.71, 0.47, 0.92, 0.19]

labels = ['NC', 'BI', 'Com', 'CC', 'CNC', 'Fin', 'MB', 'PGB', u'Saú', 'TI', 'UP']

colours = [
  colour([218, 64,  165, 0.9]),
  colour([252, 233, 22,  0.9]),
  colour([185, 255, 71,  0.9]),
  colour([81,  64,  255, 0.9]),
  colour([10,  144, 54,  0.9]),
  colour([22,  240, 252, 0.9]),
  colour([185, 144, 71,  0.9]),
  colour([81,  144, 165, 0.9]),
  colour([126, 73,  217, 0.9]),
  colour([252, 22,  26,  0.9]),
  colour([252, 114, 22,  0.9])
]

pr = [
  [p[0] * 0.31, p[0] * 0.42, p[0] * 0.53, p[0] * 0.65, p[0] * 0.76, p[0] * 0.86, p[0] * 0.92, p[0] * 0.96, p[0] * 0.98, p[0]],
  [p[1] * 0.30, p[1] * 0.43, p[1] * 0.53, p[1] * 0.66, p[1] * 0.77, p[1] * 0.87, p[1] * 0.93, p[1] * 0.96, p[1] * 0.98, p[1]],
  [p[2] * 0.31, p[2] * 0.41, p[2] * 0.54, p[2] * 0.63, p[2] * 0.78, p[2] * 0.86, p[2] * 0.92, p[2] * 0.95, p[2] * 0.98, p[2]],
  [p[3] * 0.29, p[3] * 0.41, p[3] * 0.52, p[3] * 0.62, p[3] * 0.77, p[3] * 0.85, p[3] * 0.93, p[3] * 0.96, p[3] * 0.98, p[3]],
  [p[4] * 0.27, p[4] * 0.40, p[4] * 0.50, p[4] * 0.65, p[4] * 0.74, p[4] * 0.85, p[4] * 0.92, p[4] * 0.95, p[4] * 0.98, p[4]],
  [p[5] * 0.30, p[5] * 0.45, p[5] * 0.54, p[5] * 0.65, p[5] * 0.75, p[5] * 0.87, p[5] * 0.93, p[5] * 0.96, p[5] * 0.98, p[5]],
  [p[6] * 0.30, p[6] * 0.43, p[6] * 0.52, p[6] * 0.66, p[6] * 0.76, p[6] * 0.87, p[6] * 0.92, p[6] * 0.95, p[6] * 0.98, p[6]],
  [p[7] * 0.26, p[7] * 0.42, p[7] * 0.51, p[7] * 0.67, p[7] * 0.77, p[7] * 0.85, p[7] * 0.93, p[7] * 0.96, p[7] * 0.98, p[7]],
  [p[8] * 0.33, p[8] * 0.42, p[8] * 0.54, p[8] * 0.64, p[8] * 0.76, p[8] * 0.86, p[8] * 0.92, p[8] * 0.95, p[8] * 0.98, p[8]],
  [p[9] * 0.31, p[9] * 0.42, p[9] * 0.54, p[9] * 0.64, p[9] * 0.76, p[9] * 0.85, p[9] * 0.92, p[9] * 0.96, p[9] * 0.98, p[9]],
  [p[10] * 0.31, p[10] * 0.42, p[10] * 0.54, p[10] * 0.64, p[10] * 0.76, p[10] * 0.85, p[10] * 0.92, p[10] * 0.96, p[10] * 0.98, p[10]]
]

ax.set_xlabel(u'Épocas')
ax.set_ylabel(u'Precisão')

for i in range(10+1):
  ax.plot(x, pr[i], c = colours[i], ls = '--', label = labels[i], fillstyle = 'none')

# ax.plot(x,x+1,c='g',marker=(8,2,0),ls='--',label='Greedy Heuristic')
# ax.plot(x,(x+1)**2,c='k',ls='-',label='Random')
# ax.plot(x,(x-1)**2,c='r',marker="v",ls='-',label='GMC')
# ax.plot(x,x**2-1,c='m',marker="o",ls='--',label='KSTW',fillstyle='none')
# ax.plot(x,x-1,c='k',marker="+",ls=':',label='DGYC')

plt.legend(loc = 2)
plt.savefig('precisao_chart.png')
